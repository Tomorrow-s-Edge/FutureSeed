name:  Java CI with Test Coverage (Backend Only)

on:
  push:
    paths:
      - 'backend/**'
    branches: [ backend-develop, acceptance, main ]
  pull_request:
    paths:
      - 'backend/**'
    branches: [ backend-develop, acceptance, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend  # All run commands will execute in the backend folder
    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      # Set up the JDK (adjust version/distribution as needed)
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: temurin

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build your project, run tests, and generate the JaCoCo coverage report
      - name: Build and Run Tests
        run: mvn clean verify jacoco:report

      # Optionally: Publish the JaCoCo coverage details to your pull request as a comment
      - name: Publish JaCoCo Coverage Report to PR
        uses: madrapps/jacoco-report@v1.7.2
        with:
          # Adjust the path; here we use a wildcard to find jacoco.xml in any module
          paths: ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          # Optionally enforce a minimum overall coverage (e.g., 80%)
          min-coverage-overall: 80

      # Alternatively: Generate a badge using the JaCoCo CSV (if you have configured it in your pom.xml)
      #- name: Generate JaCoCo Badge
      #  uses: cicirello/jacoco-badge-generator@v2
      #  with:
      #    jacoco-csv-file: target/site/jacoco/jacoco.csv
